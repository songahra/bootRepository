<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kAKNM01">
	
	<select id="getAllList" resultType="KAKNM01VO">
		<![CDATA[
            select /* sdk knm/KAKNM01_SQL.xml - getAllList - 지식관리 기술문의 메인 리스트 */
                   /* (ROW_NUMBER() OVER()) AS rowNum */
                   (select tc.code_content 
                      from tb_code tc 
                     where tc.code_id = tq.solution_id ) AS solution_name 
                 , tq.title 
                 , (select tu.user_name 
                      from tb_user tu 
                     where tu.user_id = tq.reg_userid ) AS reg_userName_tq
                 , tq.reg_date ::timestamp::date AS reg_date_tq2    
                 , TO_CHAR(tq.reg_date, 'YYYY-MM-DD HH24:MI') AS reg_date_tq
                 , COALESCE((select tu.user_name 
                              from tb_user tu 
                             where tu.user_id = ta.reg_userid ), '--') AS reg_userName_ta
                 , COALESCE(TO_CHAR(ta.reg_date, 'YYYY-MM-DD HH24:MI'),'--')AS reg_date_ta
                 , (case when TO_CHAR((ta.reg_date - tq.reg_date ), 'DD') > '00'
                         then CONCAT(TO_CHAR((ta.reg_date - tq.reg_date ), 'DD'), ' DAYS')
                         when TO_CHAR((ta.reg_date - tq.reg_date ), 'DD') <= '00'
                         then CONCAT(TO_CHAR((ta.reg_date - tq.reg_date ), 'HH24'), ' HOURS')
                         else '--' end) AS term              
                 , (case when tq.status = 'SS' then '완료'
                         when tq.status = 'RQ' then '재질문' 
                         when tq.status = 'NN' then '미완료' end) AS status
                 , tq.question_id
                 , tq.reg_userid
                 , tq.requestion_id
                 , tq.answer_id
              from tb_question tq
              left JOIN tb_answer ta
                on tq.answer_id = ta.answer_id
             where tq.display_yn ='Y'
             order by tq.reg_date desc
		]]>
	</select>
    
    <select id="srchList" parameterType="KAKNM01VO" resultType="KAKNM01VO">
          <![CDATA[
            select distinct /* sdk knm/KAKNM01_SQL.xml - getAllList - 지식관리 기술문의 메인 리스트 */
                   /* (ROW_NUMBER() OVER()) AS rowNum */
                  (select tc.code_content 
                      from tb_code tc 
                     where tc.code_id = tq.solution_id ) AS solution_name 
                 , tq.title 
                 , (select tu.user_name 
                      from tb_user tu 
                     where tu.user_id = tq.reg_userid ) AS reg_userName_tq
                 , tq.reg_date    
                 , tq.reg_date ::timestamp::date AS reg_date_tq2    
                 , TO_CHAR(tq.reg_date, 'YYYY-MM-DD HH24:MI') AS reg_date_tq
                 , COALESCE((select tu.user_name 
                              from tb_user tu 
                             where tu.user_id = ta.reg_userid ), '--') AS reg_userName_ta
                 , COALESCE(TO_CHAR(ta.reg_date, 'YYYY-MM-DD HH24:MI'),'--') AS reg_date_ta
                 , (case when TO_CHAR((ta.reg_date - tq.reg_date ), 'DD') > '00'
                         then CONCAT(TO_CHAR((ta.reg_date - tq.reg_date ), 'DD'), ' DAYS')
                         when TO_CHAR((ta.reg_date - tq.reg_date ), 'DD') <= '00'
                         then CONCAT(TO_CHAR((ta.reg_date - tq.reg_date ), 'HH24'), ' HOURS')
                         else '--' end) AS term  
                 , (ta.reg_date - tq.reg_date ) as term_de                    
                 , (case when tq.status = 'SS' then '완료'
                         when tq.status = 'RQ' then '재질문' 
                         when tq.status = 'NN' then '미완료' end) AS status
                 , tq.question_id
                 , tq.reg_userid
                 , tq.answer_id
                 , ta.reg_userid
              from tb_question tq
              left JOIN tb_answer ta
                on tq.answer_id = ta.answer_id
              left join tb_tag tt
               on tt.post_id = tq.question_id 
             where tq.display_yn ='Y'
               and 1=1
          ]]>
          <if test="title != null and title != ''">
          <![CDATA[
               and tq.title like '%'||#{title}||'%'
          ]]>
          </if> 
          <if test="status != null and status != ''">
          <![CDATA[
               and tq.status = #{status}
          ]]>
          </if>
          <if test='tag_tag != "" and tag_tag != null '> 
          <![CDATA[
		     and tt.tag_type = 'TAG'
               and tt.tag_value like '%'||#{tag_tag}||'%'
          ]]>
          </if>
          <if test='tag_erc != "" and tag_erc != null '> 
          <![CDATA[
		     and tt.tag_type = 'ERC'
               and tt.tag_value like '%'||#{tag_erc}||'%'
          ]]>
          </if>
          <if test='tag_ert != "" and tag_ert != null '> 
          <![CDATA[
		     and tt.tag_type = 'ERT'
               and tt.tag_value like '%'||#{tag_ert}||'%'
          ]]>
          </if>
          <choose>
          <when test="sortType == 1"> 
          <![CDATA[     
              order by term_de 
          ]]>
          </when> 
          <when test="sortType == 2"> 
          <![CDATA[
              order by reg_userName_tq 
          ]]>
          </when>
          <when test="sortType == 3"> 
          <![CDATA[
              order by reg_userName_ta 
          ]]>
          </when>
          <when test="sortType == 4"> 
          <![CDATA[
              order by status DESC
          ]]>
          </when>
          <otherwise> 
          <![CDATA[
              order by tq.reg_date DESC 
          ]]>
          </otherwise> 
          </choose>
	</select>

     <select id="srchQuId"  parameterType="String"  resultType="KAKNM01VO">
		<![CDATA[
            select 
                   tq.question_id 
                 , tq.project_id 
                 , (select tp.project_name                                  
                      from tb_project tp 
                     where tq.project_id = tp.project_id ) as project_name   
                 , tq.solution_id 
                 , (select tc.code_content 
                      from tb_code tc 
                     where tq.solution_id = tc.code_id ) as solution_name
                 , tq.title
                 , (select tu.user_id 
                      from tb_user tu 
                      where tu.user_id = ta.reg_userid ) AS reg_userid_ta
              from tb_question tq
              left JOIN tb_answer ta
                on tq.answer_id = ta.answer_id
             where tq.question_id = #{question_id}
		]]>
	</select>

	<select id="getDetail" parameterType="String" resultType="KAKNM01VO">
		<![CDATA[
                   select distinct 
                          (select tu.user_name 
                             from tb_user tu 
                            where tu.user_id = tq.reg_userid ) as reg_userName_tq    /* 작성자 */
                         , tq.reg_userid                                             /* 질문등록자 id*/   
                         , TO_CHAR(tq.reg_date, 'YYYY-MM-DD HH24:MI') AS reg_date_tq /* 질문 등록일 */ 
                         , TO_CHAR((current_timestamp- ta.reg_date ), 'DD') as term  /* 질문등록일/현재시간 차이 */
                         , (select dept
                              from tb_user tu
                             where tu.user_id = tq.reg_userid) as reg_user_dept      /* 작성자 부서 */
                         , (case when tq.status = 'SS' then '완료'
                                 when tq.status = 'RQ' then '재질문' 
                                 when tq.status = 'NN' then '미완료' end) AS status   /* 상태  */
                         , tq.score                                                  /* 점수 */
                         , tq.project_id                                             /* 프로젝트 id */
                         , tq.title                                                  /* 질문 제목 */
                         , tq.content_q                                              /* 질문 내용 */
                         , tq.content_s                                              /* 질문 환경 및 상황 */
                         , tq.err_log                                                /* 오류로그 */
                         , tq.solution_id                                            /* 솔루션id */
                         , tq.question_id                                            /* 질문 id */
                         , ta.answer_id                                              /* 답변 id */
                         , ta.reg_userid as reg_userid_ta                             /* 답변등록자 id */
                         , (select tp.project_name                                  
                              from tb_project tp 
                             where tq.project_id = tp.project_id ) as project_name   /* 프로젝트 명 */
                         , (select tc.code_content 
                              from tb_code tc 
                             where tq.solution_id = tc.code_id ) as solution_name    /* 솔루션 명 */
                         , (select concat('#', string_agg(tt.tag_value, ' #')) 
                              from tb_tag tt 
                             where TT.post_id = #{question_id} 
                               and TT.tag_type = 'TAG') as tag_tag                   /* 태그 */    
                         , (select tt.tag_value 
                              from tb_tag tt 
                             where  TT.post_id = #{question_id}
                               and TT.tag_type = 'ERC') as tag_erc                   /* 에러코드 */     
                         , (select tt.tag_value
                              from tb_tag tt 
                             where TT.post_id = #{question_id}
                               and TT.tag_type = 'ERT') as tag_ert                   /* 예외종류 */       
                      from tb_question tq 
                      left join tb_answer ta 
                        on tq.answer_id = ta.answer_id
                     where tq.question_id = #{question_id}
		]]>
	</select>
     
     <select id="getPjList"  parameterType="map"  resultType="KAKNM01VO">
		<![CDATA[
            select /* sdk knm/KAKNM01_SQL.xml - getPrList - 지식관리 프로젝트 리스트 */
                   project_id
                 , project_name
                 , customer
                 , CONCAT(project_start_date, ' ~ ', project_end_date) as term
              from tb_project
		]]>
	</select>
     
     <select id="srchPjList"  resultType="KAKNM01VO">
		<![CDATA[
            select /* sdk knm/KAKNM01_SQL.xml - srchPrList - 지식관리 프로젝트 조회 리스트 */
                   project_id
                 , project_name
                 , CONCAT(project_start_date, ' ~ ', project_end_date) as term
              from tb_project
             where 1=1 
		]]>
          <if test='project_name != "" and project_name != null '> 
          <![CDATA[
               and project_name like '%'||#{project_name}||'%'
          ]]>
          </if>
          <if test='customer != "" and customer != null '> 
          <![CDATA[
               and customer like '%'||#{customer}||'%'
          ]]>
          </if>
	</select>

	<select id="getMyList" resultType="KAKNM01VO">
		<![CDATA[
            select /* sdk knm/KAKNM01_SQL.xml - getMyList - 지식관리 내가 문의한 질문 리스트 */
                   (ROW_NUMBER() OVER()) AS rowNum
                 , (select tc.code_content 
                      from tb_code tc 
                     where tc.code_id = tq.solution_id ) AS solution_name 
                 , tq.title 
                 , (select tu.user_name 
                      from tb_user tu 
                     where tu.user_id = tq.reg_userid ) AS reg_userName_tq
                 , tq.reg_date ::timestamp::date AS reg_date_tq2
                 , TO_CHAR(tq.reg_date, 'YYYY-MM-DD HH24:MI') AS reg_date_tq
                 , COALESCE((select tu.user_name 
                              from tb_user tu 
                             where tu.user_id = ta.reg_userid ), '--') AS reg_userName_ta
                 , COALESCE(TO_CHAR(ta.reg_date, 'YYYY-MM-DD HH24:MI'),'--') AS reg_date_ta
                 , ta.reg_date ::timestamp::date AS reg_date_ta2
                 , (case when TO_CHAR((ta.reg_date - tq.reg_date ), 'DD') > '00'
                         then CONCAT(TO_CHAR((ta.reg_date - tq.reg_date ), 'DD'), ' DAYS')
                         when TO_CHAR((ta.reg_date - tq.reg_date ), 'DD') <= '00'
                         then CONCAT(TO_CHAR((ta.reg_date - tq.reg_date ), 'HH24'), ' HOURS')
                         else '--' end) AS term              
                 , (case when tq.status = 'SS' then '완료'
                         when tq.status = 'RQ' then '재질문' 
                         when tq.status = 'NN' then '미완료' end) AS status
                 , tq.question_id
                 , tq.reg_userid
              from tb_question tq
              left join tb_answer ta
                on tq.answer_id = ta.answer_id
             where tq.display_yn ='Y'
               and tq.reg_userid = #{userid}
             order by tq.reg_date 
               
		]]>
	</select>

	<select id="srchMyList" resultType="KAKNM01VO">
		<![CDATA[
            select /* sdk knm/KAKNM01_SQL.xml - srchMyList - 지식관리 내가 문의한 질문 리스트 조건 조회 */
                   (select tc.code_content 
                      from tb_code tc 
                     where tc.code_id = tq.solution_id ) AS solution_name 
                 , tq.title 
                 , (select tu.user_name 
                      from tb_user tu 
                     where tu.user_id = tq.reg_userid ) AS reg_userName_tq
                 , TO_CHAR(tq.reg_date, 'YYYY-MM-DD HH24:MI') AS reg_date_tq
                 , COALESCE((select tu.user_name 
                              from tb_user tu 
                             where tu.user_id = ta.reg_userid ), '--') AS reg_userName_ta
                 , COALESCE(TO_CHAR(ta.reg_date, 'YYYY-MM-DD HH24:MI'),'--') AS reg_date_ta
                 , TO_CHAR(ta.reg_date, 'YYYY-MM-DD HH24:MI') AS reg_date_ta
                 , (case when TO_CHAR((ta.reg_date - tq.reg_date ), 'DD') > '00'
                         then CONCAT(TO_CHAR((ta.reg_date - tq.reg_date ), 'DD'), ' DAYS')
                         when TO_CHAR((ta.reg_date - tq.reg_date ), 'DD') <= '00'
                         then CONCAT(TO_CHAR((ta.reg_date - tq.reg_date ), 'HH24'), ' HOURS')
                         else '--' end) AS term              
                 , (case when tq.status = 'SS' then '완료'
                         when tq.status = 'RQ' then '재질문' 
                         when tq.status = 'NN' then '미완료' end) AS status
                 , tq.question_id
                 , tq.reg_userid
              from tb_question tq
              left join tb_answer ta
                on tq.answer_id = ta.answer_id
             where tq.display_yn ='Y'
               and tq.reg_userid = #{userid}
               and 1=1
		]]>
          <if test=' title!= "" and title != null '> 
          <![CDATA[
               and tq.title like '%'||#{title}||'%'
          ]]>
          </if>
          <if test='status != "" and status != null '> 
          <![CDATA[
               and tq.status = #{status}
          ]]>  
          </if>
          <![CDATA[
              order by tq.reg_date
          ]]> 
	</select>

	<insert id="insertQuInfo" parameterType="KAKNM01VO"> 
		<![CDATA[
            WITH INS1 AS( /* sdk knm/KAKNM01_SQL.xml - insertQuInfo - 지식관리 기술문의 등록 */
               insert 
                 into tb_question
                    ( question_id
                    , requestion_id
                    , project_id
                    , reg_userid 
                    , solution_id
                    , title 
                    , content_q 
                    , content_s
                    , err_log)
               values 
                    ( #{question_id}
                    , #{requestion_id}
                    , #{project_id}
                    , #{userid}
                    , #{solution_id}
                    , #{title}
                    , #{content_q}
                    , #{content_s}
                    , #{err_log})
            RETURNING question_id, reg_userid
            )
               insert 
                 into tb_point 
                    ( point_id
                    , user_id
                    , point_value
                    , act_code
                    , post_type
                    , post_id
                    , solution_id)
               values 
                    ( CONCAT('PO', TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISSMS'))
                    , (select reg_userid 
                         from INS1)
                    , (select tc.code_content::integer
                         from tb_code tc
                        where TC.CODE_ID = 'PA010000')
                    , 'PA010000'
                    , 'Q'
                    , (select question_id 
                         from INS1)
                    , #{solution_id})
             
		]]>
	</insert>

	<insert id="insertTag" parameterType="KAKNM01VO"> 
		<![CDATA[
            insert /* sdk knm/KAKNM01_SQL.xml - insertTag - 지식관리 기술문의 일반태그 등록*/
              into tb_tag 
                 ( tag_id
                 , post_type
                 , post_id
                 , tag_type
                 , tag_value)
            values 
                 ( #{tag_id}
                 , 'Q'
                 , #{question_id}
                 , 'TAG'
                 , #{tag_value}
                 )
		]]>
	</insert>

	<insert id="insertErcTag" parameterType="map"> 
		<![CDATA[
            insert /* sdk knm/KAKNM01_SQL.xml - insertErcTag - 지식관리 기술문의 에러코드태그 등록 */
              into tb_tag 
                 ( tag_id
                 , post_type
                 , post_id
                 , tag_type
                 , tag_value)
            values 
                 ( #{tag_id}
                 , 'Q'
                 , #{question_id}
                 , 'ERC'
                 , #{tag_value}
                 )
		]]>
	</insert>

	<insert id="insertErtTag" parameterType="map"> 
		<![CDATA[
            insert /* sdk knm/KAKNM01_SQL.xml - insertErtTag - 지식관리 기술문의 예외종류태그 등록 */
              into tb_tag 
                 ( tag_id
                 , post_type
                 , post_id
                 , tag_type
                 , tag_value)
            values 
                 ( #{tag_id}
                 , 'Q'
                 , #{question_id}
                 , 'ERT'
                 , #{tag_value}
                 )
		]]>
	</insert>
     
	<update id="updateReQuInfo" parameterType="KAKNM01VO"> 
		<![CDATA[
            update tb_question /* sdk knm/KAKNM01_SQL.xml - updateQuInfo - 지식관리 기술문의 재질문 등록 */
               set requestion_id = #{question_id}      /* 재질문 id */
                 , status        = 'RQ'                /* 상태 */
                 , update_userid = #{userid}           /* 수정자 */
                 , update_date   = current_timestamp   /* 수정일 */
             where question_id   = #{up_question_id}
		]]>
	</update>

	<update id="updateQuInfo" parameterType="KAKNM01VO"> 
		<![CDATA[
            update tb_question /* sdk knm/KAKNM01_SQL.xml - updateQuInfo - 지식관리 기술문의 수정 */
               set project_id    = #{project_id}      /* 프로젝트 ID */
                 , solution_id   = #{solution_id}     /* 솔루션 ID */ 
                 , title         = #{title}           /* 제목 */ 
                 , content_q     = #{content_q}       /* 질문 내용 */ 
                 , content_s     = #{content_s}       /* 환경 및 상황 */ 
                 , err_log       = #{err_log}         /* 오류 로그 */ 
                 , update_userid = #{userid}          /* 수정자 */
                 , update_date   = current_timestamp  /* 수정일 */
             where question_id   = #{question_id}
               and reg_userid    = #{userid}
		]]>
	</update>

     <update id="updatetQuScore" parameterType="map"> 
		<![CDATA[
            WITH INS1 AS( /* sdk knm/KAKNM01_SQL.xml - updatetQuScore - 지식관리 기술문의 평가하기 */
               update tb_question 
                  set score         = #{score}           /* 점수 */ 
                    , update_userid = #{userid}          /* 수정자 */
                    , update_date   = current_timestamp  /* 수정일 */                
               where question_id    = #{question_id}
            RETURNING question_id, reg_userid
            )
               insert 
                 into tb_point 
                    ( point_id
                    , user_id
                    , point_value
                    , act_code
                    , post_type
                    , post_id
                    , solution_id)
               values 
                    ( CONCAT('PO', TO_CHAR(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISSMS'))
                    , (select reg_userid 
                         from INS1)
            ]]>
            <choose>
            <when test="time == 'within'"> 
          <![CDATA[
                   , (select tc.code_content::integer
                      from tb_code tc
                      where TC.CODE_ID = 'PA020100') /* 1일이내 */
                   , 'PA020100'
            ]]>  
            </when>
            <otherwise> 
          <![CDATA[
                   , (select tc.code_content::integer
                      from tb_code tc
                      where TC.CODE_ID = 'PA020200') /* 2일이상 */
                   , 'PA020200'
          ]]>  
           </otherwise>
           </choose>
          <![CDATA[
                    , 'Q'
                    , (select question_id 
                         from INS1)
                    , #{solution_id})
          ]]>
	</update>

     
	<update id="updateQuHite" parameterType="String"> 
		<![CDATA[
            update tb_question 
               set hit = hit + 1 /* hit */
             where question_id = #{question_id}
		]]>
	</update>

	<delete id="deleteTagInfo" parameterType="KAKNM01VO"> 
	     <![CDATA[
             delete /* sdk knm/KAKNM01_SQL.xml - deleteTagInfo - 지식관리 기술문의 태그 삭제 */
               from tb_tag
              where post_id = #{question_id}
		]]>
     </delete>
     
	<delete id="deletetQuInfo" parameterType="KAKNM01VO"> 
		<![CDATA[
            WITH INS1 AS( /* sdk knm/KAKNM01_SQL.xml - deletetQuInfo - 지식관리 기술문의 삭제 */

             update tb_question
                set display_yn    = 'N'
                  , update_userid = #{userid}       
                  , update_date   = current_timestamp
              where question_id   = #{question_id}
                and reg_userid    = #{userid} 

            RETURNING question_id, reg_userid
            )
              delete  
                from tb_point
               where post_id  = #{question_id}
                 and act_code = 'PA010000'    /* 기술문의 코드 */
          ]]>
	</delete>

</mapper>



